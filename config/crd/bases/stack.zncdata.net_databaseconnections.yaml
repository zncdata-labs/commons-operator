---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: databaseconnections.stack.zncdata.net
spec:
  group: stack.zncdata.net
  names:
    kind: DatabaseConnection
    listKind: DatabaseConnectionList
    plural: databaseconnections
    singular: databaseconnection
  scope: Namespaced
  versions:
  - name: v1alpha1
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseConnection is the Schema for the databaseconnections
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseConnectionSpec defines the desired state of DatabaseConnection
            properties:
              default:
                type: boolean
              provider:
                description: DatabaseConnectionProvider defines the enum provider
                  for DataConnection. You can choose one of mysql, postgres, redis,
                  and provider is required.
                properties:
                  mysql:
                    description: MysqlProvider defines the desired connection info
                      of Mysql
                    properties:
                      credential:
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        properties:
                          existingSecret:
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            type: string
                        type: object
                      driver:
                        default: com.mysql.cj.jdbc.Driver
                        description: If you want to use mysql8+ , you should set driver
                          to com.mysql.cj.jdbc.Driver, otherwise you should set driver
                          to com.mysql.jdbc.Driver.
                        default: com.mysql.cj.jdbc.Driver
                        description: If you want to use mysql8+ , you should set driver
                          to com.mysql.cj.jdbc.Driver, otherwise you should set driver
                          to com.mysql.jdbc.Driver.
                        type: string
                      host:
                        type: string
                      port:
                        type: integer
                      ssl:
                        type: boolean
                    type: object
                  postgres:
                    description: PostgresProvider defines the desired connection info
                      of Postgres
                    properties:
                      credential:
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        properties:
                          existingSecret:
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            type: string
                        type: object
                      driver:
                        default: org.postgresql.Driver
                        default: org.postgresql.Driver
                        type: string
                      host:
                        type: string
                      port:
                        type: integer
                      ssl:
                        type: boolean
                    type: object
                  redis:
                    description: RedisProvider defines the desired connection info
                      of Redis
                    properties:
                      credential:
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        properties:
                          existingSecret:
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            type: string
                        type: object
                      credential:
                        description: 'CredentialSpec include: Username and Password
                          or ExistSecret.'
                        properties:
                          existingSecret:
                            description: ExistSecret is a Secret name, created by
                              user. It includes Username and Password, it is encrypted
                              by base64. If ExistSecret is not empty, Username and
                              Password will be ignored.
                            type: string
                          password:
                            description: Password is the password for the database.
                            type: string
                          username:
                            description: Username is the username for the database.
                            type: string
                        type: object
                      host:
                        type: string
                      port:
                        type: string
                    type: object
                type: object
            type: object
          status:
            properties:
              condition:
              condition:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
